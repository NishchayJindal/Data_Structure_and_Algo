//Q198. House Robber
class Solution {
public:
int solverec(vector<int> &nums,int n)
{
    if(n<0)
    {
        return 0;
    }
    if(n==0)
    {
        return nums[0];
    }
    int include=solverec(nums,n-2)+nums[n];
    int exclude=solverec(nums,n-1)+0;
    return max(include,exclude);
}
int solvememo(vector<int> & nums,int n, vector<int> & dp)
{
    if (n<0)
    {
        return 0;
    }
    if(n==0)
    {
        return nums[0];
    }
    if(dp[n]!=-1)
    {
        return dp[n];
    }
    int include=solvememo(nums,n-2,dp)+nums[n];
    int exclude=solvememo(nums,n-1,dp)+0;
    dp[n]=max(include,exclude);
    return dp[n];

}
int solvetab(vector<int> &nums)
{
    int n=nums.size()-1;
    vector<int> dp(n+1,-1);
    dp[0]=nums[0];
    for(int i=1;i<=n;i++)
    {
        int include=nums[i];
        if(i-2>=0)
        {
            include=dp[i-2]+include;
        }
        int exclude=dp[i-1]+0;
        dp[i]=max(include,exclude);
    }
    return dp[n];
}
int solveSO(vector<int> &nums)
{
    int n=nums.size();
    //important step my mise this
    if (n == 0) return 0;
    if (n == 1) return nums[0];
    int pre1=nums[0];
    int curr,pre2=0;

    for(int i=1;i<n;i++)
    {
        int include=nums[i];
        include=pre2+include;
        int exclude=pre1+0;
        curr=max(include,exclude);
        pre2=pre1;
        pre1=curr;
    }
    return curr;
} 
int rob(vector<int>& nums) {
    //int n=nums.size()-1;
    //int ans=solverec(nums,n);
    //vector<int> dp(n+1,-1);
    //int ans =solvememo(nums,n,dp);
    //int ans=solvetab(nums);
    int ans=solveSO(nums);
    return ans;
    }
};
