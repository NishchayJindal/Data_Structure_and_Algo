// Merge flattened linked list ** imp
//gfg code 
/*
class Node {
public:
    int data;
    Node* next;
    Node* bottom;

    Node(int x) {
        data = x;
        next = NULL;
        bottom = NULL;
    }
};
*/
Node * merge(Node * a, Node * b)
{
    if(!a)return b;
    if(!b)return a;
    Node* ans=0;
    if(a->data <b->data)
    {
        ans=a;
        a->bottom=merge(a->bottom,b);
    }
    else
    {
        ans=b;
        b->bottom=merge(a,b->bottom);
    }
    return ans;
}
class Solution {
  public:
    Node *flatten(Node *root) {
        // code here
    if(!root)
    {
        return 0;
    }
    Node * mergell=merge(root,flatten(root->next));
    return mergell;
    }
};
