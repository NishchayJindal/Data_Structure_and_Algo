//** IMPORTANT FOR TREE 
//LOWEST COMMON ANCESTOR OF A BINARY TREE
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
    if(root==NULL)
    {
        return NULL;
    }

    if (root->val==p->val)
    {
        return p;
    }
    if (root->val==q->val)
    {
        return q;
    }
    TreeNode* leftroot= lowestCommonAncestor(root->left,p,q);    
    
    TreeNode* rightroot= lowestCommonAncestor(root->right,p,q);

    if(leftroot==NULL && rightroot==NULL)
    return NULL;

    if(leftroot==NULL && rightroot!=NULL)
    return rightroot;
    
    if(leftroot!=NULL && rightroot==NULL)
    return leftroot;
    else
    {
        return root;
    }
    }
};
