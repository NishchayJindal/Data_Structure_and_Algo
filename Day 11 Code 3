//Q213.House Robber II
class Solution {
public:
int solveSO(vector<int> &nums,int start ,int end)
{
    //int n=nums.size();
    //important step my mise this

    int pre1=nums[start];
    int curr,pre2=0;

    for(int i=start+1;i<=end;i++)
    {
        int include=nums[i];
        include=pre2+include;
        int exclude=pre1+0;
        curr=max(include,exclude);
        pre2=pre1;
        pre1=curr;
    }
    return curr;
}
    int rob(vector<int>& nums) {
    int n =nums.size();
    if (n == 0) return 0;
    if (n == 1) return nums[0];
    if(n==2)
    return max(nums[0],nums[1]);
    
    int ans1=solveSO(nums,0,n-2);
    int ans2=solveSO(nums,1,n-1);
    return max(ans1,ans2);    
    }
};
