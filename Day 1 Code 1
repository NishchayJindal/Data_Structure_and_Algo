class Solution {
public:
   static bool campare(pair<int,int> a,pair<int,int> b)
   {
    return a.first<b.first;
   }
    vector<int> twoSum(vector<int>& nums, int target) {
    //  for(int i=0;i<nums.size();i++)
    //  {
    //     for(int j=i+1;j<nums.size();j++){
    //         if(nums[i]+nums[j]==target)
    //         return{i,j};
    //     }
    //  } 
    //  return{};
    vector<pair<int,int>> data;
    vector<int> ans;
    for(int i=0;i<nums.size();i++)
    {
        int val=nums[i];
        int index=i;
        data.push_back({val,i});
    }
    sort(data.begin(),data.end(),campare);

    int i=0;
    int j=data.size()-1;

    while(i<j)
    {
        if(data[i].first+ data[j].first==target)
        {
            ans.push_back(data[i].second);
            ans.push_back(data[j].second);
            break;
        }
        else if(data[i].first+ data[j].first>target)
        {
            j--;
        }
        else
        {
            i++;
        }
    }
    return ans;
    }
};
