//416. Partition Equal Subset Sum
class Solution {
public:
    bool solvetab(vector<int> &nums,int target)
    {
        vector<vector<int>> dp (nums.size()+1,vector<int>(target+1,0));
        int n=nums.size();
        for(int i=0;i<nums.size();i++)
        {
            dp[i][0]=1;
        }
        for(int i=n-1;i>=0;i--)
        {
            for(int t=1;t<=target;t++)
            {
                bool include=0;
                if(t-nums[i]>=0)
                {
                    include=dp[i+1][t-nums[i]];
                }
                bool exclude=dp[i+1][t];
                dp[i][t]=(include || exclude);
                cout<<dp[i][t]<<" ";
            }
            cout<<endl;   
        }
        return dp[0][target];
    }
    bool canPartition(vector<int>& nums) {
    int n=nums.size();
    int sum=0;
    for(int i=0;i<n;i++)
    {
        sum+=nums[i];
    }
    if(sum%2!=0)
    {
        return false;
    }
    int index=0;
    int target=sum/2;    
    bool ans = solvetab(nums,target);
    return ans;

    }
};
